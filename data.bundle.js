(()=>{"use strict";const e=(e,t)=>t.some((t=>e instanceof t));let t,n;const r=new WeakMap,o=new WeakMap,s=new WeakMap;let a={get(e,t,n){if(e instanceof IDBTransaction){if("done"===t)return r.get(e);if("store"===t)return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return d(e[t])},set:(e,t,n)=>(e[t]=n,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function i(e){a=e(a)}function c(o){return"function"==typeof o?(s=o,(n||(n=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(s)?function(...e){return s.apply(u(this),e),d(this.request)}:function(...e){return d(s.apply(u(this),e))}):(o instanceof IDBTransaction&&function(e){if(r.has(e))return;const t=new Promise(((t,n)=>{const r=()=>{e.removeEventListener("complete",o),e.removeEventListener("error",s),e.removeEventListener("abort",s)},o=()=>{t(),r()},s=()=>{n(e.error||new DOMException("AbortError","AbortError")),r()};e.addEventListener("complete",o),e.addEventListener("error",s),e.addEventListener("abort",s)}));r.set(e,t)}(o),e(o,t||(t=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction]))?new Proxy(o,a):o);var s}function d(e){if(e instanceof IDBRequest)return function(e){const t=new Promise(((t,n)=>{const r=()=>{e.removeEventListener("success",o),e.removeEventListener("error",s)},o=()=>{t(d(e.result)),r()},s=()=>{n(e.error),r()};e.addEventListener("success",o),e.addEventListener("error",s)}));return s.set(t,e),t}(e);if(o.has(e))return o.get(e);const t=c(e);return t!==e&&(o.set(e,t),s.set(t,e)),t}const u=e=>s.get(e),l=["get","getKey","getAll","getAllKeys","count"],f=["put","add","delete","clear"],p=new Map;function m(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if(p.get(t))return p.get(t);const n=t.replace(/FromIndex$/,""),r=t!==n,o=f.includes(n);if(!(n in(r?IDBIndex:IDBObjectStore).prototype)||!o&&!l.includes(n))return;const s=async function(e,...t){const s=this.transaction(e,o?"readwrite":"readonly");let a=s.store;return r&&(a=a.index(t.shift())),(await Promise.all([a[n](...t),o&&s.done]))[0]};return p.set(t,s),s}i((e=>({...e,get:(t,n,r)=>m(t,n)||e.get(t,n,r),has:(t,n)=>!!m(t,n)||e.has(t,n)})));const y=["continue","continuePrimaryKey","advance"],I={},g=new WeakMap,v=new WeakMap,b={get(e,t){if(!y.includes(t))return e[t];let n=I[t];return n||(n=I[t]=function(...e){g.set(this,v.get(this)[t](...e))}),n}};async function*w(...e){let t=this;if(t instanceof IDBCursor||(t=await t.openCursor(...e)),!t)return;const n=new Proxy(t,b);for(v.set(n,t),s.set(n,u(t));t;)yield n,t=await(g.get(n)||t.continue()),g.delete(n)}function D(t,n){return n===Symbol.asyncIterator&&e(t,[IDBIndex,IDBObjectStore,IDBCursor])||"iterate"===n&&e(t,[IDBIndex,IDBObjectStore])}i((e=>({...e,get:(t,n,r)=>D(t,n)?w:e.get(t,n,r),has:(t,n)=>D(t,n)||e.has(t,n)})));const B=function(e,t,{blocked:n,upgrade:r,blocking:o,terminated:s}={}){const a=indexedDB.open(e,t),i=d(a);return r&&a.addEventListener("upgradeneeded",(e=>{r(d(a.result),e.oldVersion,e.newVersion,d(a.transaction),e)})),n&&a.addEventListener("blocked",(e=>n(e.oldVersion,e.newVersion,e))),i.then((e=>{s&&e.addEventListener("close",(()=>s())),o&&e.addEventListener("versionchange",(e=>o(e.oldVersion,e.newVersion,e)))})).catch((()=>{})),i}("counter-db",1,{upgrade(e){e.createObjectStore("counter",{keyPath:"id",autoIncrement:!0})}});document.addEventListener("DOMContentLoaded",(async()=>{const e=document.getElementById("data-display-box"),t=document.getElementById("data-display"),n=await async function(){const e=(await B).transaction("counter","readonly").objectStore("counter");return await e.getAll()}();e.classList.remove("skeleton-block"),n.forEach((e=>{const n=document.createElement("tr");n.setAttribute("id",`row-${e.id}`),n.innerHTML=`\n            <td>${e.id}</td>\n            <td>${e.value}</td>\n            <td>${e.lastUpdate}</td>\n            <td>\n                <button class="delete is-medium" data-id="${e.id}"></button>\n            </td>\n    `,t.appendChild(n)})),document.querySelectorAll(".delete").forEach((e=>{e.addEventListener("click",(async e=>{const t=e.currentTarget.getAttribute("data-id");await async function(e){const t=await B;console.log("deleteCounter",e);const n=t.transaction("counter","readwrite"),r=n.objectStore("counter");await r.delete(Number(e)),await n.done}(t),document.getElementById(`row-${t}`).remove()}))}))}))})();